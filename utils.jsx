// helper-functions// Adding [].indexOf to Illustrator JavaScriptif (!Array.prototype.indexOf) {    Array.prototype._indexOf = function(elt /*, from*/) {        var len = this.length;        var from = Number(arguments[1]) || 0;        from = (from < 0) ? Math.ceil(from) : Math.floor(from);        if (from < 0) from += len;        for (; from < len; from++) {            if (from in this && this[from] === elt) return from;        }        return -1;   };}// http://samuelmullen.com/2012/03/left-pad-zeroes-in-javascript/function zeroPad(value, padding) {	var zeroes = "0";	for (var i = 0; i < padding; i++) { zeroes += "0"; }	return (zeroes + value).slice(padding * -1);}Array.prototype.findUniqueValues = function() {	var o = {}, i, l = this.length, r = [];	for(i=0; i<l;i+=1) o[this[i]] = this[i];	for(i in o) r.push(o[i]);	return r;}function cleanText(text) {	for (var i=0; i < htmlCharacterCodes.length; i++) {		var charCode = htmlCharacterCodes[i];		text = text.replace( new RegExp(htmlCharacterCodes[i][0],'g'), htmlCharacterCodes[i][1] )	};	return text;}function straightenCurlyQuotesInsideAngleBrackets(text) {	// thanks to jashkenas	var tagFinder = /<[^\n]+?>/g;	var quoteFinder = /[“‘’”]([^\n]*?)[“‘’”]/g;	return text.replace(tagFinder, function(tag){		return tag.replace( /[“”]/g , '"' ).replace( /[‘’]/g , "'" );	});}function isEmpty(str) {	return (!str || 0 === str.length);}function isBlank (str) {	return (!str || /^\s*$/.test(str));}function makeKeyword(text) {	// text = text.replace( /[^A-Za-z0-9_\-]/g , "_" ).toLowerCase();	text = text.replace( /[^A-Za-z0-9_\-]/g , "_" );	return text;}